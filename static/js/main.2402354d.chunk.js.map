{"version":3,"sources":["good_beep.mp3","error_beep.mp3","App.js","index.js"],"names":["AVENTRI_EVENT_ID","process","App","useState","openScan","setOpenScan","searchOpen","setSearchOpen","aventriData","setAventriData","manualCheckIn","setManualCheckIn","aventriAccessToken","setAventriAccessToken","aventriMessage","setAventriMessage","useSound","goodBeep","playGoodSound","errorBeep","playBadSound","inputEl","useRef","useEffect","getAuthToken","getData","a","formdata","FormData","append","requestOptions","method","body","redirect","fetch","then","response","text","result","catch","error","console","log","data","JSON","parse","accesstoken","dir","getAttendees","jasonData","tempObject","Array","isArray","forEach","record","name","split","firstName","lastName","obj","id","attendeeid","CheckedIn","undefined","aventriCheckedIn","message","handleCapture","handleCheckIn","description","success","className","width","height","onUpdate","err","onClick","style","fontSize","found","display","onSubmit","e","item","preventDefault","toLowerCase","trim","target","value","handleSubmit","ref","htmlFor","type","current","reset","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2402354d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/good_beep.1eda3a39.mp3\";","export default __webpack_public_path__ + \"static/media/error_beep.ea0f5342.mp3\";","import { useEffect, useState, useRef } from 'react'\n\nimport useSound from 'use-sound'\nimport BarcodeScannerComponent from 'react-qr-barcode-scanner'\n\nimport goodBeep from './good_beep.mp3'\nimport errorBeep from './error_beep.mp3'\nimport './App.css'\n\n// const AVENTRI_EVENT_ID = '640418'\n// const AVENTRI_KEY = '7baf9b9d42dcde06a7000e6e51005a56d8c726b4'\n// const AVENTRI_ID = '598'\nconst AVENTRI_EVENT_ID = process.env.REACT_APP_AVENTRI_EVENT_ID\nconst AVENTRI_KEY = process.env.REACT_APP_AVENTRI_KEY\nconst AVENTRI_ID = process.env.REACT_APP_AVENTRI_ID\nconst AVENTRI_CHECK_IN_URL =\n  'https://api-na.eventscloud.com/api/v2/ereg/checkInAttendee.json?accesstoken='\n\nfunction App() {\n  const [openScan, setOpenScan] = useState(false)\n  const [searchOpen, setSearchOpen] = useState(false)\n  const [aventriData, setAventriData] = useState({})\n  const [manualCheckIn, setManualCheckIn] = useState()\n  const [aventriAccessToken, setAventriAccessToken] = useState()\n  const [aventriMessage, setAventriMessage] = useState()\n\n  const [playGoodSound] = useSound(goodBeep)\n  const [playBadSound] = useSound(errorBeep)\n  const inputEl = useRef(null)\n\n  useEffect(() => {\n    getAuthToken()\n    getData()\n  }, [aventriAccessToken, aventriMessage])\n\n  const getAuthToken = async () => {\n    const formdata = new FormData()\n    formdata.append('accountid', AVENTRI_ID)\n    formdata.append('key', AVENTRI_KEY)\n\n    const requestOptions = {\n      method: 'POST',\n      body: formdata,\n      redirect: 'follow',\n    }\n\n    const data = await fetch(\n      'https://api-na.eventscloud.com/api/v2/global/authorize.json',\n      requestOptions\n    )\n      .then((response) => response.text())\n      .then((result) => result)\n      .catch((error) => console.log('error', error))\n\n    const { accesstoken } = await JSON.parse(data)\n    if (accesstoken) setAventriAccessToken(accesstoken)\n  }\n\n  const getData = async () => {\n    getAuthToken()\n\n    if (!aventriAccessToken) return\n    const requestOptions = {\n      method: 'GET',\n      redirect: 'follow',\n    }\n    const getAttendees = await fetch(\n      `https://api-na.eventscloud.com/api/v2/ereg/listAttendees.json?accesstoken=${aventriAccessToken}&eventid=${AVENTRI_EVENT_ID}`,\n      requestOptions\n    )\n      .then((response) => response.text())\n      .then((result) => result)\n      .catch((error) => console.dir(error))\n\n    const jasonData = await JSON.parse(getAttendees)\n    let tempObject = {}\n    if (Array.isArray(jasonData)) {\n      jasonData.forEach((record) => {\n        const [firstName, lastName] = record.name.split(' ')\n        const obj = {\n          id: record.attendeeid,\n          firstName: firstName,\n          lastName: lastName,\n          CheckedIn: undefined,\n        }\n        tempObject[record.attendeeid] = obj\n      })\n    } else {\n      // if accestoken is stale, call getData recursively\n      getData()\n    }\n    setAventriData(tempObject)\n  }\n\n  const aventriCheckedIn = async (id) => {\n    const formdata = new FormData()\n\n    const requestOptions = {\n      method: 'POST',\n      body: formdata,\n      redirect: 'follow',\n    }\n\n    const message = await fetch(\n      `${AVENTRI_CHECK_IN_URL}${aventriAccessToken}&eventid=${AVENTRI_EVENT_ID}&attendeeid=${id}`,\n      requestOptions\n    )\n      .then((response) => response.text())\n      .then((result) => result)\n      .catch((error) => error)\n\n    return JSON.parse(message)\n  }\n\n  const handleCapture = async (result) => {\n    setOpenScan(false)\n    const data = await aventriCheckedIn(result)\n    handleCheckIn(result, data)\n  }\n\n  const handleCheckIn = (result, data) => {\n    if (data?.description) {\n      playGoodSound()\n      setAventriMessage({ id: result, success: data.description })\n    } else if (data?.error?.data) {\n      playBadSound()\n      setAventriMessage({ id: result, error: data?.error.data })\n    } else {\n      setAventriMessage({ error: 'Something went wrong. Please try again' })\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    setAventriMessage('')\n\n    for (let item in aventriData) {\n      if (\n        aventriData[item].firstName.toLowerCase().trim() ===\n          e.target.firstName.value.toLowerCase().trim() &&\n        aventriData[item].lastName.toLowerCase().trim() ===\n          e.target.lastName.value.toLowerCase().trim()\n      ) {\n        setManualCheckIn({\n          found: 'found',\n          id: aventriData[item].id,\n          firstName: e.target.firstName.value,\n          lastName: e.target.lastName.value,\n        })\n        return\n      } else if (aventriData[item].id.trim() === e.target.id.value.trim()) {\n        setManualCheckIn({\n          found: 'found',\n          id: aventriData[item].id,\n          firstName: e.target.firstName.value,\n          lastName: e.target.lastName.value,\n        })\n        return\n      }\n    }\n\n    setManualCheckIn({\n      found: 'not found',\n      firstName: e.target.firstName.value,\n      lastName: e.target.lastName.value,\n    })\n  }\n\n  const handleOpen = () => {\n    setOpenScan(true)\n    setSearchOpen(false)\n    setManualCheckIn('')\n    setAventriMessage('')\n  }\n  const handleClose = () => {\n    setOpenScan(false)\n    setAventriMessage('')\n  }\n  const handleSearch = () => {\n    setSearchOpen(!searchOpen)\n    setManualCheckIn('')\n    setAventriMessage('')\n  }\n  const handleReset = () => {\n    inputEl.current.reset()\n    setManualCheckIn('')\n    setAventriMessage('')\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Scan Barcode for access to the event.</h1>\n      {openScan ? (\n        <div className=\"new_scan \">\n          <div className=\"box holder\">\n            <BarcodeScannerComponent\n              width={400}\n              height={400}\n              onUpdate={(err, result) => {\n                if (result) handleCapture(result.text)\n              }}\n            />\n          </div>\n          <button onClick={() => handleClose()}>Reset</button>\n        </div>\n      ) : (\n        <div className=\"new_scan\">\n          <span className=\"box \">&nbsp;</span>\n          <button onClick={() => handleOpen()}>New Scan</button>\n          <button style={{ fontSize: '1rem' }} onClick={() => handleSearch()}>\n            {searchOpen ? 'Close Database Search' : 'Search Database'}\n          </button>\n        </div>\n      )}\n      {aventriMessage?.error && (\n        <div>\n          <h1 className=\"error\">DENIED</h1>\n          <h2>\n            {' '}\n            {aventriData[aventriMessage.id].firstName}{' '}\n            {aventriData[aventriMessage.id].lastName}\n          </h2>\n          <p>{aventriMessage.error}</p>\n        </div>\n      )}\n      {aventriMessage?.success && (\n        <div>\n          <h1 className=\"success\">SUCCESS</h1>\n          <h2>\n            {aventriData[aventriMessage.id].firstName}{' '}\n            {aventriData[aventriMessage.id].lastName}\n          </h2>\n          <p>Thank you for joining us! Please enjoy the event!</p>\n        </div>\n      )}\n      <section className=\"codes\">\n        {/* SEARCH */}\n        {searchOpen && (\n          <div className=\"search_wrapper\">\n            <h2>Search Database</h2>\n            {manualCheckIn && (\n              <div>\n                {manualCheckIn?.found === 'found' &&\n                  !aventriData[manualCheckIn?.id]?.CheckedIn && (\n                    <div className=\"found\">\n                      <hr />\n                      <h3>Found</h3>\n                      <p>\n                        <strong>\n                          {aventriData[manualCheckIn.id].firstName}{' '}\n                          {aventriData[manualCheckIn.id].lastName} (\n                          {manualCheckIn.id}) :{' '}\n                        </strong>\n                        Found in database.\n                      </p>\n                      <div style={{ display: 'flex' }}>\n                        <button\n                          className=\"add\"\n                          onClick={() => handleCapture(manualCheckIn.id)}\n                        >\n                          Check in manually?\n                        </button>\n                        <button\n                          className=\"clear\"\n                          onClick={() => setManualCheckIn('')}\n                        >\n                          Cancel\n                        </button>\n                      </div>\n                      <hr />\n                    </div>\n                  )}\n                {manualCheckIn?.found === 'found' &&\n                  aventriData[manualCheckIn?.id]?.CheckedIn && (\n                    <div className=\"found\">\n                      <hr />\n                      <h3>Already checked in.</h3>\n                      <p>\n                        <strong>\n                          {manualCheckIn.firstName} {manualCheckIn.lastName}:{' '}\n                        </strong>\n                        Found in database, but already checked in.\n                      </p>\n                      <div style={{ display: 'flex' }}>\n                        <button\n                          className=\"clear\"\n                          onClick={() => setManualCheckIn('')}\n                        >\n                          Close\n                        </button>\n                      </div>\n                      <hr />\n                    </div>\n                  )}\n                {manualCheckIn?.found === 'not found' && (\n                  <div>\n                    <h2>Not found in database.</h2>\n                    <button\n                      className=\"clear\"\n                      onClick={() => setManualCheckIn('')}\n                    >\n                      Clear\n                    </button>\n                  </div>\n                )}\n\n                {manualCheckIn?.found === 'success' && (\n                  <div>\n                    <h1 className=\"success\">SUCCESS</h1>\n                    <h2>\n                      {manualCheckIn.firstName} {manualCheckIn.lastName} has\n                      been checked in.\n                    </h2>\n                    <p> Enjoy the event!</p>\n                    <hr />\n                  </div>\n                )}\n              </div>\n            )}\n            <form onSubmit={(e) => handleSubmit(e)} ref={inputEl}>\n              <div className=\"form\">\n                <h4>Search by name:</h4>\n                <label htmlFor=\"firstName\">\n                  First Name <input id=\"firstName\" />\n                </label>\n                <label htmlFor=\"lastName\">\n                  Last Name <input id=\"lastName\" />\n                </label>\n              </div>\n              <div className=\"form\">\n                <h4>Search by Reference Number:</h4>\n                <label htmlFor=\"id\">\n                  Reference Number <input id=\"id\" />\n                </label>\n              </div>\n              <button className=\"add\" type=\"submit\">\n                Search\n              </button>\n            </form>\n            <button className=\"clear\" onClick={() => handleReset()}>\n              Clear Fields\n            </button>\n          </div>\n        )}\n      </section>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}