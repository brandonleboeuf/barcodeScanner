{"version":3,"sources":["good_beep.mp3","error_beep.mp3","App.js","index.js"],"names":["base","Airtable","apiKey","process","App","useState","data","setData","fetchData","setFetchData","airtableData","setAirtableData","useSound","goodBeep","playGoodSound","errorBeep","playBadSound","manualCheckIn","setManualCheckIn","search","setSearch","inputEl","useRef","dataArray","id","push","useEffect","select","eachPage","records","fetchNextPage","forEach","record","idCode","get","obj","firstName","lastName","CheckedIn","state","err","console","error","undefined","update","log","className","onClick","style","fontSize","width","height","onUpdate","result","text","display","found","onSubmit","e","item","preventDefault","toLowerCase","trim","target","value","handleSubmit","ref","flexDirection","htmlFor","type","current","reset","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9647d8c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/good_beep.1eda3a39.mp3\";","export default __webpack_public_path__ + \"static/media/error_beep.ea0f5342.mp3\";","\nimport {useEffect, useState, useRef} from 'react';\nimport useSound from 'use-sound';\nimport goodBeep from './good_beep.mp3'\nimport errorBeep from './error_beep.mp3'\n// import BarcodeScannerComponent from \"react-webcam-barcode-scanner\";\nimport BarcodeScannerComponent from \"react-qr-barcode-scanner\";\nimport Airtable from 'airtable';\nimport Barcode from 'react-barcode'\n\nimport './App.css';\nconst KEY = process.env.REACT_APP_AIRTABLE_API_KEY\n\nconst base = new Airtable({apiKey: KEY}).base('appLIkbpURZaoR4qA');\n\nfunction App() {\n  const [ data, setData ] = useState(\"canceled\");\n  const [fetchData, setFetchData] = useState(0)\n  const [airtableData, setAirtableData] = useState({})\n  const [playGoodSound] = useSound(goodBeep)\n  const [playBadSound] = useSound(errorBeep)\n  const [manualCheckIn, setManualCheckIn] = useState()\n  const [search, setSearch] = useState(false)\n  const inputEl = useRef(null)\n  \n  const dataArray = []\n  \n  for (let id in airtableData){\n    dataArray.push(id)\n  }\n\n  useEffect(()=>{\n    base('Table 1').select().eachPage(function page(records, fetchNextPage) {\n      records.forEach(function(record) {\n         const idCode = record.get('idCode');\n          const obj = {\n            id: record.id,\n            idCode, \n            firstName: record.get('firstName'), \n            lastName: record.get('lastName'), \n            CheckedIn: record.get('CheckedIn'), \n          }\n          setAirtableData(state => ({...state, [idCode]:obj}))\n      });\n      fetchNextPage();\n  \n  }, function done(err) {\n      if (err) { console.error(err); return; }\n  });\n  },[fetchData])\n\n  useEffect(()=>{\n     if (data && data !== \"canceled\" && airtableData[data]?.CheckedIn ) {\n       playBadSound()\n      } else if (data && data !== \"canceled\" &&  airtableData[data] === undefined) {\n      playBadSound()\n    }else if (data && data !== \"canceled\") {\n      playGoodSound()\n      base('Table 1').update([\n        {\n          \"id\": airtableData[data].id,\n          \"fields\": {\n            \"CheckedIn\": true\n          }\n        }\n      ], function(err, records) {\n        if (err) {\n          console.error(err);\n          return;\n        }\n        \n      });\n    } \n    \n  },[data])\n\nconst handleSubmit = (e) => {\n  e.preventDefault()\n\n  for (let item in airtableData) {\n    if (airtableData[item].firstName.toLowerCase().trim() === e.target.firstName.value.toLowerCase().trim() && airtableData[item].lastName.toLowerCase().trim() === e.target.lastName.value.toLowerCase().trim()) {\n      setManualCheckIn({\n        found: \"found\",\n        id: airtableData[item].id,\n        firstName: e.target.firstName.value,\n        lastName: e.target.lastName.value,\n      })\n\n      return\n    } \n  }\n  setManualCheckIn({\n    found: \"not found\",\n    firstName: e.target.firstName.value,\n    lastName: e.target.lastName.value,\n  })\n}\n\nconst handleCheckIn = () => {\n  playGoodSound()\n  base('Table 1').update([\n    {\n      \"id\": manualCheckIn.id,\n      \"fields\": {\n        \"CheckedIn\": true\n      }\n    }\n  ], function(err, records) {\n    if (err) {\n      console.error(err);\n      return;\n    }\n   console.log(records)\n    setManualCheckIn('')\n  });\n} \n\nconsole.log(manualCheckIn)\n\n  return (\n    <div className=\"App\">\n    <h1>Scan Barcode for access to the event.</h1>\n      {!data ? (\n        <div className=\"new_scan\">\n          <div className=\"box holder\">\n            <BarcodeScannerComponent\n              width={400}\n              height={400}\n              onUpdate={(err, result) => {\n                if (result && !data) setData(result.text)\n              }}\n            />\n          </div>\n        <button onClick={()=> setData(\"canceled\")}>Reset</button>\n        </div>\n      ) : (\n        <div className=\"new_scan\">\n          <span className=\"box\">&nbsp;</span>\n          <button onClick={()=> setFetchData(fetchData + 1)}>New Scan</button>\n          <button style={{fontSize: \"1rem\"}} onClick={()=> setSearch(!search)}>{search ? \"Cancel\" : \"Search Database\" }</button>\n        </div>\n      )}\n      {data !== \"canceled\" && airtableData?.[data] && !airtableData?.[data]?.CheckedIn && (\n        <div>\n          <h1 className=\"success\">SUCCESS</h1>\n          <h2>{airtableData[data].firstName} {airtableData[data].lastName} has been checked in.</h2>\n          <p> Enjoy the event!</p>\n        </div>\n        )\n      }\n      {airtableData[data]?.CheckedIn && (\n        <div>\n          <h1 className=\"error\">ERROR</h1>\n          <h2>{airtableData[data].firstName} {airtableData[data].lastName} has ALREADY been checked in...</h2>\n          <p>Please try another code</p>\n        </div>\n        )\n      }\n      \n      {data && airtableData[data] === undefined && data !== \"canceled\" &&(\n        <div>\n          <h1 className=\"error\">ERROR</h1>\n          <h2>{data} is not in the database.</h2>\n          <p>Please try another code.</p>\n        </div>\n        )\n      }\n      <section className=\"codes\">\n      {/* show barcodes  */}\n      {/* {dataArray.map((id) => (\n        <div style={{marginBottom: \"450px\"}}>\n        <Barcode id={id} value={id} />\n        </div>\n      ))} */}\n\n      {/* SEARCH */}\n      {search && (\n\n      <div>\n      <h4>Search Database</h4>\n      {manualCheckIn ? (\n        <div>\n        {manualCheckIn === \"found\" && (\n          <div>\n            <p><strong>{manualCheckIn.firstName} {manualCheckIn.lastName}: </strong>Found in database.</p>\n            <div style={{display: \"flex\"}}>\n              <button className=\"add\" onClick={() => handleCheckIn()}>Check in manually?</button>\n              <button className=\"clear\" onClick={() => setManualCheckIn(\"\")}>Cancle</button>\n            </div>\n          </div>\n        )}\n\n        {manualCheckIn.found === \"not found\" && (\n          <div>\n            <p><strong>{manualCheckIn.firstName} {manualCheckIn.lastName}: </strong>Not found in database.</p>\n            <button className=\"clear\" onClick={() => setManualCheckIn(\"\")}>Clear</button>\n          </div>\n        )}\n        </div>) : (\n\n        <form onSubmit={(e) => handleSubmit(e)}  ref={inputEl}>\n        <div style={{display: \"flex\", flexDirection: \"column\"}}>\n\n          <label htmlFor=\"firstName\">First Name <input id=\"firstName\"/></label>\n          \n          <label htmlFor=\"lastName\">Last Name <input id=\"lastName\"/></label>\n        </div>\n        <button className=\"add\" type=\"submit\">Search</button>\n        <button className=\"clear\" onClick={()=> inputEl.current.reset() }>Clear Fields</button>\n        </form>\n        )}\n      </div>\n      )}\n      </section>\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}